version: "3.9"

services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet
    ports:
      - "5482:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: production
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: app_db
    ports:
      - "3201:3000"
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "81:80"
    networks:
      - appnet

volumes:
  db-data:

networks:
  appnet:
    driver: bridge
